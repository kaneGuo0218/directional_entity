<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.directional.base.mapper.OrderLogMapper" >
  <resultMap id="BaseResultMap" type="com.directional.base.entity.OrderLog" >
    <id column="order_log_id" property="orderLogId" jdbcType="BIGINT" />
    <result column="manage_admin_user_id" property="manageAdminUserId" jdbcType="BIGINT" />
    <result column="order_info_id" property="orderInfoId" jdbcType="VARCHAR" />
    <result column="user_mobile" property="userMobile" jdbcType="VARCHAR" />
    <result column="operate_type" property="operateType" jdbcType="INTEGER" />
    <result column="operate_fee" property="operateFee" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="log_desc" property="logDesc" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    order_log_id, manage_admin_user_id, order_info_id, user_mobile, operate_type, operate_fee, 
    create_time, log_desc
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from order_log
    where order_log_id = #{orderLogId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from order_log
    where order_log_id = #{orderLogId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.directional.base.entity.OrderLog" >
    insert into order_log (manage_admin_user_id, order_info_id, user_mobile, 
      operate_type, operate_fee, create_time, 
      log_desc)
    values (#{manageAdminUserId,jdbcType=BIGINT}, #{orderInfoId,jdbcType=VARCHAR}, #{userMobile,jdbcType=VARCHAR}, 
      #{operateType,jdbcType=INTEGER}, #{operateFee,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, 
      #{logDesc,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.directional.base.entity.OrderLog" >
    insert into order_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      manage_admin_user_id,
      order_info_id,
      user_mobile,
      operate_type,
      operate_fee,
      create_time,
      log_desc,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{manageAdminUserId,jdbcType=BIGINT},
      #{orderInfoId,jdbcType=VARCHAR},
      #{userMobile,jdbcType=VARCHAR},
      #{operateType,jdbcType=INTEGER},
      #{operateFee,jdbcType=DECIMAL},
      #{createTime,jdbcType=TIMESTAMP},
      #{logDesc,jdbcType=VARCHAR},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.directional.base.entity.OrderLog" >
    update order_log
    <set >
      <if test="manageAdminUserId != null" >
        manage_admin_user_id = #{manageAdminUserId,jdbcType=BIGINT},
      </if>
      <if test="orderInfoId != null" >
        order_info_id = #{orderInfoId,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null" >
        user_mobile = #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="operateType != null" >
        operate_type = #{operateType,jdbcType=INTEGER},
      </if>
      <if test="operateFee != null" >
        operate_fee = #{operateFee,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logDesc != null" >
        log_desc = #{logDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where order_log_id = #{orderLogId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.directional.base.entity.OrderLog" >
    update order_log
    set manage_admin_user_id = #{manageAdminUserId,jdbcType=BIGINT},
      order_info_id = #{orderInfoId,jdbcType=VARCHAR},
      user_mobile = #{userMobile,jdbcType=VARCHAR},
      operate_type = #{operateType,jdbcType=INTEGER},
      operate_fee = #{operateFee,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      log_desc = #{logDesc,jdbcType=VARCHAR}
    where order_log_id = #{orderLogId,jdbcType=BIGINT}
  </update>
</mapper>